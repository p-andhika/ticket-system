/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as authSignupRouteImport } from './routes/(auth)/signup'
import { Route as authSigninRouteImport } from './routes/(auth)/signin'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedTodosIndexRouteImport } from './routes/_authenticated/todos/index'
import { Route as AuthenticatedPostsIndexRouteImport } from './routes/_authenticated/posts/index'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const authSigninRoute = authSigninRouteImport.update({
  id: '/(auth)/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedTodosIndexRoute = AuthenticatedTodosIndexRouteImport.update({
  id: '/todos/',
  path: '/todos/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedPostsIndexRoute = AuthenticatedPostsIndexRouteImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/forgot-password': typeof authForgotPasswordRoute
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/': typeof AuthenticatedIndexRoute
  '/posts': typeof AuthenticatedPostsIndexRoute
  '/todos': typeof AuthenticatedTodosIndexRoute
}
export interface FileRoutesByTo {
  '/forgot-password': typeof authForgotPasswordRoute
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/': typeof AuthenticatedIndexRoute
  '/posts': typeof AuthenticatedPostsIndexRoute
  '/todos': typeof AuthenticatedTodosIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/signin': typeof authSigninRoute
  '/(auth)/signup': typeof authSignupRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/posts/': typeof AuthenticatedPostsIndexRoute
  '/_authenticated/todos/': typeof AuthenticatedTodosIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/forgot-password'
    | '/signin'
    | '/signup'
    | '/'
    | '/posts'
    | '/todos'
  fileRoutesByTo: FileRoutesByTo
  to: '/forgot-password' | '/signin' | '/signup' | '/' | '/posts' | '/todos'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/forgot-password'
    | '/(auth)/signin'
    | '/(auth)/signup'
    | '/_authenticated/'
    | '/_authenticated/posts/'
    | '/_authenticated/todos/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authSigninRoute: typeof authSigninRoute
  authSignupRoute: typeof authSignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/todos/': {
      id: '/_authenticated/todos/'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof AuthenticatedTodosIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/posts/': {
      id: '/_authenticated/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof AuthenticatedPostsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedPostsIndexRoute: typeof AuthenticatedPostsIndexRoute
  AuthenticatedTodosIndexRoute: typeof AuthenticatedTodosIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedPostsIndexRoute: AuthenticatedPostsIndexRoute,
  AuthenticatedTodosIndexRoute: AuthenticatedTodosIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authSigninRoute: authSigninRoute,
  authSignupRoute: authSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
